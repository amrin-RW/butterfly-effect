{
  "version": 3,
  "sources": ["../../@react-three/postprocessing/dist/index.js"],
  "sourcesContent": ["import { BlendFunction, BloomEffect, BrightnessContrastEffect, ChromaticAberrationEffect, ColorAverageEffect, ColorDepthEffect, DepthEffect, EffectComposer as EffectComposer$1, RenderPass, NormalPass, DepthDownsamplingPass, EffectPass, DepthOfFieldEffect, DotScreenEffect, GlitchEffect, GlitchMode, GodRaysEffect, GridEffect, HueSaturationEffect, NoiseEffect, OutlineEffect, PixelationEffect, ScanlineEffect, SelectiveBloomEffect, SepiaEffect, SSAOEffect, SMAAPreset, EdgeDetectionMode, SMAAImageLoader, SMAAEffect, TextureEffect, ToneMappingEffect, VignetteEffect, ShockWaveEffect, LUTEffect } from 'postprocessing';\nimport React, { forwardRef, useMemo, useLayoutEffect, createContext, useEffect, useRef, useImperativeHandle, useContext, useState } from 'react';\nimport * as THREE from 'three';\nimport { Vector2, Vector3, TextureLoader, sRGBEncoding, RepeatWrapping } from 'three';\nimport { useThree, useFrame, useLoader } from '@react-three/fiber';\nimport { isWebGL2Available } from 'three-stdlib';\nimport mergeRefs from 'react-merge-refs';\nimport _extends from '@babel/runtime/helpers/esm/extends';\n\nconst isRef = ref => !!ref.current;\n\nconst resolveRef = ref => isRef(ref) ? ref.current : ref;\nconst wrapEffect = function (effectImpl, defaultBlendMode) {\n  if (defaultBlendMode === void 0) {\n    defaultBlendMode = BlendFunction.NORMAL;\n  }\n\n  return /*#__PURE__*/forwardRef(function Wrap(_ref, ref) {\n    let {\n      blendFunction,\n      opacity,\n      ...props\n    } = _ref;\n    const invalidate = useThree(state => state.invalidate);\n    const effect = useMemo(() => new effectImpl(props), [props]);\n    useLayoutEffect(() => {\n      effect.blendMode.blendFunction = !blendFunction && blendFunction !== 0 ? defaultBlendMode : blendFunction;\n      if (opacity !== undefined) effect.blendMode.opacity.value = opacity;\n      invalidate();\n    }, [blendFunction, effect.blendMode, opacity]);\n    return /*#__PURE__*/React.createElement(\"primitive\", {\n      ref: ref,\n      object: effect,\n      dispose: null\n    });\n  });\n};\nconst useVector2 = (props, key) => {\n  const vec = props[key];\n  return useMemo(() => {\n    if (vec instanceof Vector2) {\n      return new Vector2().set(vec.x, vec.y);\n    } else if (Array.isArray(vec)) {\n      const [x, y] = vec;\n      return new Vector2().set(x, y);\n    }\n  }, [vec]);\n};\n\nconst Bloom = wrapEffect(BloomEffect, BlendFunction.SCREEN);\n\nconst BrightnessContrast = wrapEffect(BrightnessContrastEffect);\n\nconst ChromaticAberration = /*#__PURE__*/forwardRef(function ChromaticAberration(props, ref) {\n  const offset = useVector2(props, 'offset');\n  const effect = useMemo(() => new ChromaticAberrationEffect({ ...props,\n    offset\n  }), [offset, props]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\n\nconst ColorAverage = /*#__PURE__*/forwardRef(function ColorAverage(_ref, ref) {\n  let {\n    blendFunction = BlendFunction.NORMAL\n  } = _ref;\n\n  /** Because ColorAverage blendFunction is not an object but a number, we have to define a custom prop \"blendFunction\" */\n  const effect = useMemo(() => new ColorAverageEffect(blendFunction), [blendFunction]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\n\nconst ColorDepth = wrapEffect(ColorDepthEffect);\n\nconst Depth = wrapEffect(DepthEffect);\n\nconst EffectComposerContext = /*#__PURE__*/createContext(null);\nconst EffectComposer = /*#__PURE__*/React.memo( /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    children,\n    camera,\n    scene,\n    resolutionScale,\n    enabled = true,\n    renderPriority = 1,\n    autoClear = true,\n    depthBuffer,\n    disableNormalPass,\n    stencilBuffer,\n    multisampling = 8,\n    frameBufferType = THREE.HalfFloatType\n  } = _ref;\n  const {\n    gl,\n    scene: defaultScene,\n    camera: defaultCamera,\n    size\n  } = useThree();\n  scene = scene || defaultScene;\n  camera = camera || defaultCamera;\n  const [composer, normalPass, downSamplingPass] = useMemo(() => {\n    const webGL2Available = isWebGL2Available(); // Initialize composer\n\n    const effectComposer = new EffectComposer$1(gl, {\n      depthBuffer,\n      stencilBuffer,\n      multisampling: multisampling > 0 && webGL2Available ? multisampling : 0,\n      frameBufferType\n    }); // Add render pass\n\n    effectComposer.addPass(new RenderPass(scene, camera)); // Create normal pass\n\n    let downSamplingPass = null;\n    let normalPass = null;\n\n    if (!disableNormalPass) {\n      normalPass = new NormalPass(scene, camera);\n      normalPass.enabled = false;\n      effectComposer.addPass(normalPass);\n\n      if (resolutionScale !== undefined && webGL2Available) {\n        downSamplingPass = new DepthDownsamplingPass({\n          normalBuffer: normalPass.texture,\n          resolutionScale\n        });\n        downSamplingPass.enabled = false;\n        effectComposer.addPass(downSamplingPass);\n      }\n    }\n\n    return [effectComposer, normalPass, downSamplingPass];\n  }, [camera, gl, depthBuffer, stencilBuffer, multisampling, frameBufferType, scene, disableNormalPass, resolutionScale]);\n  useEffect(() => composer == null ? void 0 : composer.setSize(size.width, size.height), [composer, size]);\n  useFrame((_, delta) => {\n    if (enabled) {\n      gl.autoClear = autoClear;\n      composer.render(delta);\n    }\n  }, enabled ? renderPriority : 0);\n  const group = useRef(null);\n  useLayoutEffect(() => {\n    let effectPass;\n\n    if (group.current && group.current.__r3f && composer) {\n      effectPass = new EffectPass(camera, ...group.current.__r3f.objects);\n      effectPass.renderToScreen = true;\n      composer.addPass(effectPass);\n      if (normalPass) normalPass.enabled = true;\n      if (downSamplingPass) downSamplingPass.enabled = true;\n    }\n\n    return () => {\n      if (effectPass) composer == null ? void 0 : composer.removePass(effectPass);\n      if (normalPass) normalPass.enabled = false;\n      if (downSamplingPass) downSamplingPass.enabled = false;\n    };\n  }, [composer, children, camera, normalPass, downSamplingPass]); // Memoize state, otherwise it would trigger all consumers on every render\n\n  const state = useMemo(() => ({\n    composer,\n    normalPass,\n    downSamplingPass,\n    resolutionScale,\n    camera,\n    scene\n  }), [composer, normalPass, downSamplingPass, resolutionScale, camera, scene]); // Expose the composer\n\n  useImperativeHandle(ref, () => composer, [composer]);\n  return /*#__PURE__*/React.createElement(EffectComposerContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: group\n  }, children));\n}));\n\nconst DepthOfField = /*#__PURE__*/forwardRef(function DepthOfField(_ref, ref) {\n  let {\n    target,\n    depthTexture,\n    ...props\n  } = _ref;\n  const invalidate = useThree(state => state.invalidate);\n  const {\n    camera\n  } = useContext(EffectComposerContext);\n  const effect = useMemo(() => new DepthOfFieldEffect(camera, props), [camera, props]);\n  useLayoutEffect(() => {\n    if (target) {\n      const vec = target instanceof Vector3 ? new Vector3().set(target.x, target.y, target.z) : new Vector3().set(target[0], target[1], target[2]);\n      effect.target = vec;\n    }\n\n    if (depthTexture) effect.setDepthTexture(depthTexture.texture, depthTexture.packing);\n    invalidate();\n  }, [target, depthTexture, effect]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\n\nconst DotScreen = wrapEffect(DotScreenEffect);\n\nconst Glitch = /*#__PURE__*/forwardRef(function Glitch(_ref, ref) {\n  let {\n    active = true,\n    ...props\n  } = _ref;\n  const invalidate = useThree(state => state.invalidate);\n  const delay = useVector2(props, 'delay');\n  const duration = useVector2(props, 'duration');\n  const strength = useVector2(props, 'strength');\n  const effect = useMemo(() => new GlitchEffect({ ...props,\n    delay,\n    duration,\n    strength\n  }), [delay, duration, props, strength]);\n  useLayoutEffect(() => {\n    effect.mode = active ? props.mode || GlitchMode.SPORADIC : GlitchMode.DISABLED;\n    invalidate();\n  }, [active, effect, props.mode]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\n\nconst GodRays = /*#__PURE__*/forwardRef(function GodRays(props, ref) {\n  const {\n    camera\n  } = useContext(EffectComposerContext);\n  const effect = useMemo(() => new GodRaysEffect(camera, props.sun, props), [camera, props]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\n\nconst Grid = /*#__PURE__*/forwardRef(function Grid(_ref, ref) {\n  let {\n    size,\n    ...props\n  } = _ref;\n  const invalidate = useThree(state => state.invalidate);\n  const effect = useMemo(() => new GridEffect(props), [props]);\n  useLayoutEffect(() => {\n    if (size) effect.setSize(size.width, size.height);\n    invalidate();\n  }, [effect, size]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\n\nconst HueSaturation = wrapEffect(HueSaturationEffect);\n\nconst Noise = wrapEffect(NoiseEffect, BlendFunction.COLOR_DODGE);\n\nconst selectionContext = /*#__PURE__*/createContext(null);\nfunction Selection(_ref) {\n  let {\n    children,\n    enabled = true\n  } = _ref;\n  const [selected, select] = useState([]);\n  const value = useMemo(() => ({\n    selected,\n    select,\n    enabled\n  }), [selected, select, enabled]);\n  return /*#__PURE__*/React.createElement(selectionContext.Provider, {\n    value: value\n  }, children);\n}\nfunction Select(_ref2) {\n  let {\n    enabled = false,\n    children,\n    ...props\n  } = _ref2;\n  const group = useRef(null);\n  const api = useContext(selectionContext);\n  useEffect(() => {\n    if (api && enabled) {\n      let changed = false;\n      const current = [];\n      group.current.traverse(o => {\n        o.type === 'Mesh' && current.push(o);\n        if (api.selected.indexOf(o) === -1) changed = true;\n      });\n\n      if (changed) {\n        api.select(state => [...state, ...current]);\n        return () => {\n          api.select(state => state.filter(selected => !current.includes(selected)));\n        };\n      }\n    }\n  }, [enabled, children]);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: group\n  }, props), children);\n}\n\nconst Outline = /*#__PURE__*/forwardRef(function Outline(_ref, forwardRef) {\n  let {\n    selection = [],\n    selectionLayer = 10,\n    blendFunction,\n    patternTexture,\n    edgeStrength,\n    pulseSpeed,\n    visibleEdgeColor,\n    hiddenEdgeColor,\n    width,\n    height,\n    kernelSize,\n    blur,\n    xRay,\n    ...props\n  } = _ref;\n  const invalidate = useThree(state => state.invalidate);\n  const {\n    scene,\n    camera\n  } = useContext(EffectComposerContext);\n  const effect = useMemo(() => new OutlineEffect(scene, camera, {\n    blendFunction,\n    patternTexture,\n    edgeStrength,\n    pulseSpeed,\n    visibleEdgeColor,\n    hiddenEdgeColor,\n    width,\n    height,\n    kernelSize,\n    blur,\n    xRay\n  }), [blendFunction, blur, camera, edgeStrength, height, hiddenEdgeColor, kernelSize, patternTexture, pulseSpeed, scene, visibleEdgeColor, width, xRay]);\n  const api = useContext(selectionContext);\n  useEffect(() => {\n    // Do not allow array selection if declarative selection is active\n    // TODO: array selection should probably be deprecated altogether\n    if (!api && selection) {\n      effect.selection.set(Array.isArray(selection) ? selection.map(resolveRef) : [resolveRef(selection)]);\n      invalidate();\n      return () => {\n        effect.selection.clear();\n        invalidate();\n      };\n    }\n  }, [effect, selection, api]);\n  useEffect(() => {\n    effect.selectionLayer = selectionLayer;\n    invalidate();\n  }, [effect, selectionLayer]);\n  const ref = useRef();\n  useEffect(() => {\n    if (api && api.enabled) {\n      var _api$selected;\n\n      const effect = ref.current;\n\n      if ((_api$selected = api.selected) != null && _api$selected.length) {\n        effect.selection.set(api.selected);\n        invalidate();\n        return () => {\n          effect.selection.clear();\n          invalidate();\n        };\n      }\n    }\n  }, [api]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: mergeRefs([ref, forwardRef]),\n    object: effect\n  });\n});\n\nconst Pixelation = /*#__PURE__*/forwardRef(function Pixelation(_ref, ref) {\n  let {\n    granularity = 5\n  } = _ref;\n\n  /** Because GlitchEffect granularity is not an object but a number, we have to define a custom prop \"granularity\" */\n  const effect = useMemo(() => new PixelationEffect(granularity), [granularity]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\n\nconst Scanline = wrapEffect(ScanlineEffect, BlendFunction.OVERLAY);\n\nconst addLight = (light, effect) => light.layers.enable(effect.selection.layer);\n\nconst removeLight = (light, effect) => light.layers.disable(effect.selection.layer);\n\nconst SelectiveBloom = /*#__PURE__*/forwardRef(function SelectiveBloom(_ref, forwardRef) {\n  let {\n    selection = [],\n    selectionLayer = 10,\n    lights = [],\n    luminanceThreshold,\n    luminanceSmoothing,\n    intensity,\n    width,\n    height,\n    kernelSize\n  } = _ref;\n\n  if (lights.length === 0) {\n    console.warn('SelectiveBloom requires lights to work.');\n  }\n\n  const invalidate = useThree(state => state.invalidate);\n  const {\n    scene,\n    camera\n  } = useContext(EffectComposerContext);\n  const effect = useMemo(() => new SelectiveBloomEffect(scene, camera, {\n    blendFunction: BlendFunction.SCREEN,\n    luminanceThreshold,\n    luminanceSmoothing,\n    intensity,\n    width,\n    height,\n    kernelSize\n  }), [camera, height, intensity, kernelSize, luminanceSmoothing, luminanceThreshold, scene, width]);\n  const api = useContext(selectionContext);\n  useEffect(() => {\n    // Do not allow array selection if declarative selection is active\n    // TODO: array selection should probably be deprecated altogether\n    if (!api && selection) {\n      effect.selection.set(Array.isArray(selection) ? selection.map(resolveRef) : [resolveRef(selection)]);\n      invalidate();\n      return () => {\n        effect.selection.clear();\n        invalidate();\n      };\n    }\n  }, [effect, selection, api]);\n  useEffect(() => {\n    effect.selection.layer = selectionLayer;\n    invalidate();\n  }, [effect, selectionLayer]);\n  useEffect(() => {\n    if (lights && lights.length > 0) {\n      lights.forEach(light => addLight(resolveRef(light), effect));\n      invalidate();\n      return () => {\n        lights.forEach(light => removeLight(resolveRef(light), effect));\n        invalidate();\n      };\n    }\n  }, [effect, lights, selectionLayer]);\n  const ref = useRef();\n  useEffect(() => {\n    if (api && api.enabled) {\n      var _api$selected;\n\n      const effect = ref.current;\n\n      if ((_api$selected = api.selected) != null && _api$selected.length) {\n        effect.selection.set(api.selected);\n        invalidate();\n        return () => {\n          effect.selection.clear();\n          invalidate();\n        };\n      }\n    }\n  }, [api]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: mergeRefs([ref, forwardRef]),\n    object: effect,\n    dispose: null\n  });\n});\n\nconst Sepia = wrapEffect(SepiaEffect);\n\nconst SSAO = /*#__PURE__*/forwardRef(function SSAO(props, ref) {\n  const {\n    camera,\n    normalPass,\n    downSamplingPass,\n    resolutionScale\n  } = useContext(EffectComposerContext);\n  const effect = useMemo(() => {\n    if (normalPass === null && downSamplingPass === null) {\n      console.error('Please enable the NormalPass in the EffectComposer in order to use SSAO.');\n      return null;\n    }\n\n    return new SSAOEffect(camera, normalPass && !downSamplingPass ? normalPass.texture : null, {\n      blendFunction: BlendFunction.MULTIPLY,\n      samples: 30,\n      rings: 4,\n      distanceThreshold: 1.0,\n      distanceFalloff: 0.0,\n      rangeThreshold: 0.5,\n      rangeFalloff: 0.1,\n      luminanceInfluence: 0.9,\n      radius: 20,\n      scale: 0.5,\n      bias: 0.5,\n      intensity: 1.0,\n      color: null,\n      // @ts-ignore\n      normalDepthBuffer: downSamplingPass ? downSamplingPass.texture : null,\n      resolutionScale: resolutionScale != null ? resolutionScale : 1,\n      depthAwareUpsampling: true,\n      ...props\n    });\n  }, [camera, normalPass, props]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\n\nconst SMAA = /*#__PURE__*/forwardRef(function SMAA(_ref, ref) {\n  let {\n    preset = SMAAPreset.HIGH,\n    edgeDetectionMode = EdgeDetectionMode.COLOR\n  } = _ref;\n  const smaaProps = useLoader(SMAAImageLoader, '');\n  const effect = useMemo(() => new SMAAEffect(...smaaProps, preset, edgeDetectionMode), [smaaProps, preset, edgeDetectionMode]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\n\nconst Texture = /*#__PURE__*/forwardRef(function Texture(_ref, ref) {\n  let {\n    textureSrc,\n    texture,\n    ...props\n  } = _ref;\n  const t = useLoader(TextureLoader, textureSrc);\n  useLayoutEffect(() => {\n    t.encoding = sRGBEncoding;\n    t.wrapS = t.wrapT = RepeatWrapping;\n  }, [t]);\n  const effect = useMemo(() => new TextureEffect({ ...props,\n    texture: t || texture\n  }), [props, t, texture]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\n\nconst ToneMapping = wrapEffect(ToneMappingEffect);\n\nconst Vignette = wrapEffect(VignetteEffect);\n\nconst ShockWave = wrapEffect(ShockWaveEffect);\n\nconst LUT = /*#__PURE__*/forwardRef(function LUT(_ref, ref) {\n  let {\n    lut,\n    tetrahedralInterpolation,\n    ...props\n  } = _ref;\n  const invalidate = useThree(state => state.invalidate);\n  const effect = useMemo(() => new LUTEffect(lut, props), [lut, props]);\n  useLayoutEffect(() => {\n    if (lut) effect.setLUT(lut);\n    if (tetrahedralInterpolation) effect.setTetrahedralInterpolationEnabled(tetrahedralInterpolation);\n    invalidate();\n  }, [effect, lut, tetrahedralInterpolation]);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: effect,\n    dispose: null\n  });\n});\n\nexport { Bloom, BrightnessContrast, ChromaticAberration, ColorAverage, ColorDepth, Depth, DepthOfField, DotScreen, EffectComposer, EffectComposerContext, Glitch, GodRays, Grid, HueSaturation, LUT, Noise, Outline, Pixelation, SMAA, SSAO, Scanline, Select, Selection, SelectiveBloom, Sepia, ShockWave, Texture, ToneMapping, Vignette, selectionContext };\n"],
  "mappings": "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",
  "names": []
}
